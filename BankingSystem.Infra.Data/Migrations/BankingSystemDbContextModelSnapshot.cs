// <auto-generated />
using System;
using BankingSystem.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankingSystem.Infra.Data.Migrations
{
    [DbContext(typeof(BankingSystemDbContext))]
    partial class BankingSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BankingSystem.Domain.Entities.Account.Customer.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CustomerId"));

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreateUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SignatureImage")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<long>("TotalAmount")
                        .HasColumnType("bigint");

                    b.HasKey("CustomerId");

                    b.HasIndex("CityId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StateId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Account.Customer.OpenAccount", b =>
                {
                    b.Property<long>("OpenAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OpenAccountId"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("BranchId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CardPassword")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreateUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Cvv2")
                        .HasColumnType("int");

                    b.Property<int>("DepositFacilityPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DepositId")
                        .HasColumnType("int");

                    b.Property<int>("DepositLotteryPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DepositToAccountCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ExpYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Expmonth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Otp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("0");

                    b.Property<string>("Shaba")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<long>("TotaAccountBalance")
                        .HasColumnType("bigint");

                    b.Property<int>("WithdrawToAccountCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("OpenAccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CardNumber");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DepositId");

                    b.ToTable("OpenAccounts");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Account.User.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"));

                    b.Property<long>("Count")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreateUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("EnName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.HasKey("PermissionId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            PermissionId = 1,
                            Count = 0L,
                            CreateDate = new DateTime(2023, 9, 8, 9, 48, 55, 354, DateTimeKind.Local).AddTicks(1091),
                            CreateUserId = 1L,
                            EnName = "System Manager",
                            FaName = "مدیر سیستم",
                            IsDelete = false
                        },
                        new
                        {
                            PermissionId = 2,
                            Count = 0L,
                            CreateDate = new DateTime(2023, 9, 8, 9, 48, 55, 354, DateTimeKind.Local).AddTicks(1170),
                            CreateUserId = 1L,
                            EnName = "user",
                            FaName = "کاربر سیستم",
                            IsDelete = false
                        });
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Account.User.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreateUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Key")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("UserId");

                    b.HasIndex("BranchId");

                    b.HasIndex("Key");

                    b.HasIndex("NationalCode");

                    b.HasIndex("PermissionId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            BranchId = 1,
                            CreateDate = new DateTime(2023, 9, 8, 9, 48, 55, 343, DateTimeKind.Local).AddTicks(1829),
                            CreateUserId = 0L,
                            Family = "Admin",
                            IsDelete = false,
                            Key = 1,
                            Name = "Admin",
                            NationalCode = "1234567890",
                            Password = "123",
                            PermissionId = 1,
                            Value = "1"
                        });
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Account.User.UserKeyValue", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Key"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.ToTable("UserKeyValues");

                    b.HasData(
                        new
                        {
                            Key = 1,
                            Value = "PhoneNumber"
                        },
                        new
                        {
                            Key = 2,
                            Value = "Avatar"
                        });
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Account.User.UserProfile", b =>
                {
                    b.Property<long>("UserProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserProfileId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreateUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Key")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserProfileId");

                    b.HasIndex("Key");

                    b.HasIndex("UserId");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Account.User.UserProfileKeyValue", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Key"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.ToTable("UserProfileKeyValues");

                    b.HasData(
                        new
                        {
                            Key = 1,
                            Value = "Address"
                        });
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Branch.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreateUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("CustomerCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<long>("TotalAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.HasKey("BranchId");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            BranchId = 1,
                            Address = "تهران",
                            BranchCode = "1",
                            BranchName = "مرکزی",
                            CityId = 2,
                            CreateDate = new DateTime(2023, 9, 8, 9, 48, 55, 343, DateTimeKind.Local).AddTicks(7354),
                            CreateUserId = 1L,
                            CustomerCount = 1,
                            IsDelete = false,
                            StateId = 1,
                            TotalAmount = 0L
                        });
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Common.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreateUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StateId");

                    b.HasIndex("ParentId");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            StateId = 1,
                            CreateDate = new DateTime(2023, 9, 8, 9, 48, 55, 353, DateTimeKind.Local).AddTicks(9412),
                            CreateUserId = 0L,
                            IsDelete = false,
                            Title = "تهران"
                        },
                        new
                        {
                            StateId = 2,
                            CreateDate = new DateTime(2023, 9, 8, 9, 48, 55, 353, DateTimeKind.Local).AddTicks(9456),
                            CreateUserId = 0L,
                            IsDelete = false,
                            ParentId = 1,
                            Title = "شهر تهران"
                        });
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Deposit.Deposit", b =>
                {
                    b.Property<int>("DepositId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepositId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreateUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("DepositDailyPointsRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DepositFacilityPointsRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DepositInterestRate")
                        .HasColumnType("int");

                    b.Property<string>("DepositName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.HasKey("DepositId");

                    b.HasIndex("DepositId");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Transaction.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<string>("DebugTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DstCardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("Dt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SrcCardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("TrnSeq")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DstCardNumber");

                    b.HasIndex("SrcCardNumber");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Account.Customer.Customer", b =>
                {
                    b.HasOne("BankingSystem.Domain.Entities.Common.State", "City")
                        .WithMany("CustomerCities")
                        .HasForeignKey("CityId");

                    b.HasOne("BankingSystem.Domain.Entities.Common.State", "State")
                        .WithMany("CustomerStates")
                        .HasForeignKey("StateId");

                    b.Navigation("City");

                    b.Navigation("State");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Account.Customer.OpenAccount", b =>
                {
                    b.HasOne("BankingSystem.Domain.Entities.Branch.Branch", "Branch")
                        .WithMany("OpenAccounts")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("BranchId");

                    b.HasOne("BankingSystem.Domain.Entities.Account.Customer.Customer", "Customer")
                        .WithMany("OpenAccounts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("CustomerId");

                    b.HasOne("BankingSystem.Domain.Entities.Deposit.Deposit", "Deposit")
                        .WithMany("OpenAccounts")
                        .HasForeignKey("DepositId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("DepositId");

                    b.Navigation("Branch");

                    b.Navigation("Customer");

                    b.Navigation("Deposit");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Account.User.User", b =>
                {
                    b.HasOne("BankingSystem.Domain.Entities.Branch.Branch", "Branch")
                        .WithMany("Users")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankingSystem.Domain.Entities.Account.User.UserKeyValue", "UserKeyValue")
                        .WithMany("Users")
                        .HasForeignKey("Key")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankingSystem.Domain.Entities.Account.User.Permission", "Permission")
                        .WithMany("Users")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Permission");

                    b.Navigation("UserKeyValue");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Account.User.UserProfile", b =>
                {
                    b.HasOne("BankingSystem.Domain.Entities.Account.User.UserProfileKeyValue", "UserProfileKeyValue")
                        .WithMany("UserProfiles")
                        .HasForeignKey("Key")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankingSystem.Domain.Entities.Account.User.User", "User")
                        .WithMany("UserProfiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("UserProfileKeyValue");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Branch.Branch", b =>
                {
                    b.HasOne("BankingSystem.Domain.Entities.Common.State", "City")
                        .WithMany("BranchCities")
                        .HasForeignKey("CityId");

                    b.HasOne("BankingSystem.Domain.Entities.Common.State", "State")
                        .WithMany("BranchStates")
                        .HasForeignKey("StateId");

                    b.Navigation("City");

                    b.Navigation("State");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Common.State", b =>
                {
                    b.HasOne("BankingSystem.Domain.Entities.Common.State", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Account.Customer.Customer", b =>
                {
                    b.Navigation("OpenAccounts");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Account.User.Permission", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Account.User.User", b =>
                {
                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Account.User.UserKeyValue", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Account.User.UserProfileKeyValue", b =>
                {
                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Branch.Branch", b =>
                {
                    b.Navigation("OpenAccounts");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Common.State", b =>
                {
                    b.Navigation("BranchCities");

                    b.Navigation("BranchStates");

                    b.Navigation("CustomerCities");

                    b.Navigation("CustomerStates");
                });

            modelBuilder.Entity("BankingSystem.Domain.Entities.Deposit.Deposit", b =>
                {
                    b.Navigation("OpenAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
